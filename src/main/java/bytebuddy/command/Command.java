package bytebuddy.command;

import bytebuddy.storage.Storage;
import bytebuddy.task.TaskList;
import bytebuddy.ui.Ui;

/**
 * Represents an abstract command in the ByteBuddy chatbot application.
 * <p>
 * Commands encapsulate user actions, such as adding tasks, marking tasks,
 * or exiting the application. Each command defines how it should be executed
 * through the {@link #execute(Storage, TaskList, Ui)} method.
 */
public abstract class Command {

    /** Indicates whether this command will cause the application to exit. */
    boolean isExit;

    /**
     * Constructs a {@code Command}.
     *
     * @param isExit {@code true} if this command signals program termination,
     *               {@code false} otherwise.
     */
    Command(boolean isExit) {
        this.isExit = isExit;
    }

    /**
     * Executes the command.
     * <p>
     * Implementations may modify the task list, interact with storage, and/or
     * return messages generated by the UI.
     *
     * @param storage The storage handler for saving/loading tasks.
     * @param tasks   The list of tasks the command operates on.
     * @param ui      The UI component for generating user-facing messages.
     * @return A string message describing the outcome of the command.
     */
    public abstract String execute(Storage storage, TaskList tasks, Ui ui);
}
