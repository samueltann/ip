package bytebuddy.command;

import bytebuddy.storage.Storage;
import bytebuddy.task.Task;
import bytebuddy.task.TaskList;
import bytebuddy.ui.Ui;

/**
 * Represents a command that adds a {@link Task} to the {@link TaskList}.
 * <p>
 * When executed, this command inserts the specified task into the task list
 * and returns a confirmation message generated by the {@link Ui}.
 */
public class AddCommand extends Command {

    /** The task to be added to the task list. */
    private Task task;

    /**
     * Creates a new {@code AddCommand} with the given task.
     *
     * @param task The task to add. Must not be {@code null}.
     * @throws AssertionError if {@code task} is {@code null}.
     */
    public AddCommand(Task task) {
        super(false);
        assert task != null : "Task should not be null";
        this.task = task;
    }

    /**
     * Executes the add command by inserting the stored task into the given
     * task list, then returns a confirmation message from the UI.
     *
     * @param storage The storage handler (not used by this command).
     * @param tasks   The task list to which the task will be added.
     * @param ui      The UI component used to generate the confirmation message.
     * @return A string message confirming that the task has been added.
     */
    @Override
    public String execute(Storage storage, TaskList tasks, Ui ui) {
        tasks.addTask(task);
        return ui.getAddedMessage(tasks, task);
    }
}
